.m-userNewForm
  = render 'shared/error_messages', object: user_form
  = form_with model: user_form, id: 'signup_form', scope: :user_form, class: 'signup-form', url: form_url, method: :post, local: true, data: { turbo: false } do |f|
    .form-group
    - if provider
      = f.hidden_field :password, value: "A#{Digest::MD5.hexdigest(params[:uid]).slice(0, 29)}"
      = f.hidden_field :password_confirmation, value: "A#{Digest::MD5.hexdigest(params[:uid]).slice(0, 29)}"
    - else
      = f.text_field :email, id: 'userEmail', class: 'basic-text-field', 'v-model': "emailField", '@input': 'emailValid()', ':class': "emailError ? 'basic-error-field' : ''", placeholder: User.human_attribute_name(:email)
      p.basic-error-text v-text='emailError'
      .form-group
        = f.password_field :password, id: 'userPassword', class: 'basic-text-field', 'v-model': 'passwordField', '@input': 'passwordValid()', ':class': "passwordError ? 'basic-error-field' : ''", autocomplete: 'off', placeholder: "#{User.human_attribute_name(:password) + t('defaults.password_valid')}"
        p.basic-error-text v-text='passwordError'
      .form-group
        = f.password_field :password_confirmation, id: 'userPasswordConfirmation', class: 'basic-text-field', 'v-model': 'passwordConfirmationField', ':class': "passwordConfirmationError ? 'basic-error-field' : ''", autocomplete: 'off', '@input': 'passwordConfirmationValid()', placeholder: User.human_attribute_name(:password_confirmation)
        p.basic-error-text v-text='passwordConfirmationError'
    .form-group
      = f.text_field :nickname, value: "#{provider ? nickname : ''}", id: 'userNickname', class: 'basic-text-field', 'v-model': 'nicknameField', '@input': 'nicknameValid()', ':class': "nicknameError ? 'basic-error-field' : ''", placeholder: "#{User.human_attribute_name(:nickname) + t('defaults.nickname_valid')}"
      p.basic-error-text v-text='nicknameError'
    .m-userNewForm__games 
      p.basic-text.mb-2 = t 'users.new.explain_playing_game'
      - Game.all.each do |game|
          input.d-none type="checkbox" name="games[#{game.id}]" id="game_#{game.id}_user"
          label.user-games-label for="game_#{game.id}_user"
            = game.title
    = f.submit class: 'btn-basic'

= javascript_pack_tag 'signup'
